version: "0.1 beta-2"

simple_types:
   string_manchester: 
      description: "An OWL manchester syntax string."
   printf: 
      description: "A UTF-8 encoded printf format string."      

compound_types: # type_name: subfield_name: description, compulsory(boolean), type
   printf_annotation:
      annotationProperty:
         description: > A string corresponding to the rdfs:label of an owl annotation property.  
         If the annotation property has no label,  the shortForm ID should be used. 
         The annotation property must be listed in the annotation property dictionary.
         compulsory: True
      text:
         description: "A print format string."
         complulsory: True
       vars:
          description: > An ordered list of variables for substitution into the accompanying print format string. 
          Each entry must correspond to the name of a variable specified in either the 'vars' field or the data_var 
          field of the pattern. Where an OWL entity is specified, the label fo the OWL entity should be used in the substitution.
          type: []
          complulsory: True
   printf_owl:
      axiom_type:
         description: > OWL axiom type expressed as manchester syntax: equivalentTo, subClassOf, disjointWith.  
         GCI  - for general class inclusion axioms, is also valid (although missing from manchester syntax.)  
         This specifies the axiom type to be generated from the text following substitution.
         compulsory: True
      text:
         description: > A print format string in OWL Manchester syntax.  Each entry must correspond to an entry in o the name of a var in 
         the var field of the pattern. Entries in single quotes must correspond to the labels of entries in 
         owl_entity dictionaries (classes, relations, dataProperties)
         complulsory: True
       vars: 
          description: > An ordered list of variables for substitution into the accompanying print format string. 
          Each entry must correspond to the name of a var in the var field of the pattern."
         complulsory: True


fields:  # Field name : type, compulsory(boolean), description.

   pattern_name:
     type: "ASCII string"  # Should be specified more formally
     compulsory: True
     description: > The name of the pattern.  This must be an ASCII string with no spaces. 
     The only special characters allowed are '_' and '-'.  
     By convention, this is used as the file name of the pattern - with an appropriate extension.
     
   base_IRI:  # not rqd, give JSON-LD base.
      type: IRI # Should be specified more formally
      description: "Specifies the base IRI to be used to generate new classes."
      
#### owl_entity Dictionaries

   classes:
     type: {}
     description: "A dictionary of OWL classes. key :label; value : short form id"
     compulsory: False
   relations:
      type: {}
      alternative_name: "ObjectProperties"
      description: "A dictionary of OWL object properties. key : label; value : short form id"
      compulsory: False
   dataProperties:
      type: {}
      description: "A dictionary of OWL data properties key : label; value : short form id"
      compulsory: False
   annotationProperties:
      type: {}
      description: "A dictionary of OWL annotation properties key : label; value : short form id"
      compulsory: False

   naming fields
      type: []
      description: "A list of annotation properties used as naming fields, in order of preference."
      value_type: 'annotation property name.'

   description:
      type: "UTF-8 string"
      compulsory: False
      description: "A free text description of the pattern.  Must be UTF-8 encoded."

   vars:
     type: {}
     value_type: string_manchester
     compulsory: true
     description: > A dictionary of variables ranging over OWL classes.  
     Key = variable name, value = variable range as manchester syntax string.
     
   data_vars:
      type: {}
      compulsory: False
      description: > A dictionary of variables ranging over OWL data-types.
      Key = variable name, value = variable range specified as a valid OWL data-type.


   annotations:
      description: "A list, each member of which is a printf_annotation"
      type:  []
      value_type: printf_annotation: {}
      compulsory: False
   owl_axioms:
      description: "A list, each member of which is a printf_annotation"
      type: printf_owl: {}
      compulsory: False

defaults: ## A default set of dictionaries for defining derived fields.

   annotationProperties:
      'label': 'rdfs:label'
      'definition': 'obo:IAO_0000115'
      
   naming_fields: ['label']

derived_fields:  # field_name: type: fillers
# Primary fields with a pre-specified filler for one of the slots.
# These serve to hide complexity from end users.  
# Users of DOS-DP are free to extend by extending default dictionaries
# and adding new derived fields to fit the needs of their project.

   name:
      type: printf_annotation: annotationProperty: label

   def: 
      printf_annotation: annotationProperty: definition

   equivalentTo:
      type: printf_owl: axiom_type: equivalentTo

   subClassOf:
      type: printf_owl: axiom_type: subClassOf

   disjointWith:
      type: printf_owl: axiom_type: disjointWith

   GCI:
      type: printf_owl: axiom_type: GCI




